(function() {var type_impls = {
"lending":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#744\">source</a><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; Callable&lt;T&gt; for <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = <a class=\"enum\" href=\"lending/pallet/enum.Call.html\" title=\"enum lending::pallet::Call\">Call</a>&lt;T&gt;</h4></section></div></details>","Callable<T>","lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#89\">source</a><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#89\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#89\">source</a><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#89\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; <a class=\"trait\" href=\"lending/trait.GetStorageVersion.html\" title=\"trait lending::GetStorageVersion\">GetStorageVersion</a> for <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.CurrentStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CurrentStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"lending/trait.GetStorageVersion.html#associatedtype.CurrentStorageVersion\" class=\"associatedtype\">CurrentStorageVersion</a> = NoStorageVersionSet</h4></section></summary><div class='docblock'>This will be filled out by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a href=\"lending/trait.GetStorageVersion.html#associatedtype.CurrentStorageVersion\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lending/trait.GetStorageVersion.html#tymethod.current_storage_version\" class=\"fn\">current_storage_version</a>() -&gt; Self::<a class=\"associatedtype\" href=\"lending/trait.GetStorageVersion.html#associatedtype.CurrentStorageVersion\" title=\"type lending::GetStorageVersion::CurrentStorageVersion\">CurrentStorageVersion</a></h4></section></summary><div class='docblock'>Returns the current storage version as supported by the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lending/trait.GetStorageVersion.html#tymethod.on_chain_storage_version\" class=\"fn\">on_chain_storage_version</a>() -&gt; <a class=\"struct\" href=\"lending/struct.StorageVersion.html\" title=\"struct lending::StorageVersion\">StorageVersion</a></h4></section></summary><div class='docblock'>Returns the on-chain storage version of the pallet as stored in the storage.</div></details></div></details>","GetStorageVersion","lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#89\">source</a><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; <a class=\"trait\" href=\"lending/trait.Hooks.html\" title=\"trait lending::Hooks\">Hooks</a>&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lending/trait.Hooks.html#method.on_finalize\" class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>The block is being finalized. Implement to have something happen.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lending/trait.Hooks.html#method.on_idle\" class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: <a class=\"struct\" href=\"lending/struct.Weight.html\" title=\"struct lending::Weight\">Weight</a>) -&gt; <a class=\"struct\" href=\"lending/struct.Weight.html\" title=\"struct lending::Weight\">Weight</a></h4></section></summary><div class='docblock'>This will be run when the block is being finalized (before <code>on_finalize</code>). <a href=\"lending/trait.Hooks.html#method.on_idle\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lending/trait.Hooks.html#method.on_initialize\" class=\"fn\">on_initialize</a>(_n: BlockNumber) -&gt; <a class=\"struct\" href=\"lending/struct.Weight.html\" title=\"struct lending::Weight\">Weight</a></h4></section></summary><div class='docblock'>The block is being initialized. Implement to have something happen. <a href=\"lending/trait.Hooks.html#method.on_initialize\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lending/trait.Hooks.html#method.on_runtime_upgrade\" class=\"fn\">on_runtime_upgrade</a>() -&gt; <a class=\"struct\" href=\"lending/struct.Weight.html\" title=\"struct lending::Weight\">Weight</a></h4></section></summary><div class='docblock'>Perform a module upgrade. <a href=\"lending/trait.Hooks.html#method.on_runtime_upgrade\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lending/trait.Hooks.html#method.offchain_worker\" class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a module allows you to perform long-running tasks\nthat make (by default) validators generate transactions that feed results\nof those long-running computations back on chain. <a href=\"lending/trait.Hooks.html#method.offchain_worker\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lending/trait.Hooks.html#method.integrity_test\" class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Run integrity test. <a href=\"lending/trait.Hooks.html#method.integrity_test\">Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; IntegrityTest for <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Run integrity test. <a>Read more</a></div></details></div></details>","IntegrityTest","lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(n: <a class=\"type\" href=\"lending/type.BlockNumberFor.html\" title=\"type lending::BlockNumberFor\">BlockNumberFor</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(n: <a class=\"type\" href=\"lending/type.BlockNumberFor.html\" title=\"type lending::BlockNumberFor\">BlockNumberFor</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>The block is being finalized. Implement to have something happen. <a>Read more</a></div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; OnGenesis for <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(n: <a class=\"type\" href=\"lending/type.BlockNumberFor.html\" title=\"type lending::BlockNumberFor\">BlockNumberFor</a>&lt;T&gt;, remaining_weight: <a class=\"struct\" href=\"lending/struct.Weight.html\" title=\"struct lending::Weight\">Weight</a>) -&gt; <a class=\"struct\" href=\"lending/struct.Weight.html\" title=\"struct lending::Weight\">Weight</a></h4></section></summary><div class='docblock'>The block is being finalized.\nImplement to have something happen in case there is leftover weight.\nCheck the passed <code>remaining_weight</code> to make sure it is high enough to allow for\nyour pallet’s extra computation. <a>Read more</a></div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(n: <a class=\"type\" href=\"lending/type.BlockNumberFor.html\" title=\"type lending::BlockNumberFor\">BlockNumberFor</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"lending/struct.Weight.html\" title=\"struct lending::Weight\">Weight</a></h4></section></summary><div class='docblock'>The block is being initialized. Implement to have something happen. <a>Read more</a></div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; OnRuntimeUpgrade for <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; <a class=\"struct\" href=\"lending/struct.Weight.html\" title=\"struct lending::Weight\">Weight</a></h4></section></summary><div class='docblock'>Perform a module upgrade. <a>Read more</a></div></details></div></details>","OnRuntimeUpgrade","lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#1153-1648\">source</a><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.do_create_lending_pool\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#1157-1208\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.do_create_lending_pool\" class=\"fn\">do_create_lending_pool</a>(\n    who: &amp;T::AccountId,\n    id: <a class=\"type\" href=\"lending/type.LendingPoolId.html\" title=\"type lending::LendingPoolId\">LendingPoolId</a>,\n    asset: <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;,\n    balance: <a class=\"type\" href=\"lending/type.BalanceOf.html\" title=\"type lending::BalanceOf\">BalanceOf</a>&lt;T&gt;,\n) -&gt; <a class=\"type\" href=\"lending/type.DispatchResult.html\" title=\"type lending::DispatchResult\">DispatchResult</a></h4></section><section id=\"method.do_activate_lending_pool\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#1213-1227\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.do_activate_lending_pool\" class=\"fn\">do_activate_lending_pool</a>(asset: <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;) -&gt; <a class=\"type\" href=\"lending/type.DispatchResult.html\" title=\"type lending::DispatchResult\">DispatchResult</a></h4></section><section id=\"method.do_supply\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#1231-1273\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.do_supply\" class=\"fn\">do_supply</a>(\n    who: &amp;T::AccountId,\n    asset: <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;,\n    balance: <a class=\"type\" href=\"lending/type.BalanceOf.html\" title=\"type lending::BalanceOf\">BalanceOf</a>&lt;T&gt;,\n) -&gt; <a class=\"type\" href=\"lending/type.DispatchResult.html\" title=\"type lending::DispatchResult\">DispatchResult</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_withdrawal\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#1278-1330\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.do_withdrawal\" class=\"fn\">do_withdrawal</a>(\n    who: &amp;T::AccountId,\n    asset: <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;,\n    balance: <a class=\"type\" href=\"lending/type.BalanceOf.html\" title=\"type lending::BalanceOf\">BalanceOf</a>&lt;T&gt;,\n) -&gt; <a class=\"type\" href=\"lending/type.DispatchResult.html\" title=\"type lending::DispatchResult\">DispatchResult</a></h4></section></summary><div class=\"docblock\"><p>This method allows a user to withdraw liquidity from a lending pool.\nThe pool can be deactivated or not, but the user must have enough LP tokens to withdraw.\nThis method withdraw some liquidity from a liquidy pool and burns LP tokens of the user</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.do_deactivate_lending_pool\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#1515-1528\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.do_deactivate_lending_pool\" class=\"fn\">do_deactivate_lending_pool</a>(asset: <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;) -&gt; <a class=\"type\" href=\"lending/type.DispatchResult.html\" title=\"type lending::DispatchResult\">DispatchResult</a></h4></section></summary><div class=\"docblock\"><p>This method de-activates an existing lending pool</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.account_id\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#1534-1536\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.account_id\" class=\"fn\">account_id</a>() -&gt; T::AccountId</h4></section></summary><div class=\"docblock\"><p>This method returns the palled account id</p>\n<p>This actually does computation. If you need to keep using it,\nthen make sure to cache the value and only call this once.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_and_mint\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#1543-1575\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.update_and_mint\" class=\"fn\">update_and_mint</a>(\n    who: &amp;T::AccountId,\n    asset: <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;,\n    lp_id: <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;,\n    scaled_balance: <a class=\"type\" href=\"lending/type.AssetBalanceOf.html\" title=\"type lending::AssetBalanceOf\">AssetBalanceOf</a>&lt;T&gt;,\n    current_supply_index: <a class=\"type\" href=\"lending/type.Rate.html\" title=\"type lending::Rate\">Rate</a>,\n) -&gt; <a class=\"type\" href=\"lending/type.DispatchResult.html\" title=\"type lending::DispatchResult\">DispatchResult</a></h4></section></summary><div class=\"docblock\"><p>Calculates the new_mint amount as follows,\nlet interest_on_old_deposit = old_balance * (current_supply_index - last_supply_index)\nlet total_new_mint = interest_on_old_deposit + new balance\nMint total_new_mint LP tokens into supplier’s account\nUpdate supplier data</p>\n</div></details></div></details>",0,"lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#570\">source</a><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve_pools\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#570\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.reserve_pools\" class=\"fn\">reserve_pools</a>&lt;KArg&gt;(k: KArg) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"lending/pallet/struct.LendingPool.html\" title=\"struct lending::pallet::LendingPool\">LendingPool</a>&lt;T&gt;&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;<a class=\"struct\" href=\"lending/pallet/struct.AssetPool.html\" title=\"struct lending::pallet::AssetPool\">AssetPool</a>&lt;T&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for <a href=\"lending/pallet/type.LendingPoolStorage.html\" title=\"type lending::pallet::LendingPoolStorage\"><code>LendingPoolStorage</code></a>.</p>\n</div></details></div></details>",0,"lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#641\">source</a><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.last_accrued_interest_time\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#641\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.last_accrued_interest_time\" class=\"fn\">last_accrued_interest_time</a>&lt;KArg&gt;(k: KArg) -&gt; <a class=\"struct\" href=\"lending/pallet/struct.UnderlyingAsset.html\" title=\"struct lending::pallet::UnderlyingAsset\">UnderlyingAsset</a>&lt;T&gt;<div class=\"where\">where\n    KArg: EncodeLike&lt;<a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for <a href=\"lending/pallet/type.UnderlyingAssetStorage.html\" title=\"type lending::pallet::UnderlyingAssetStorage\"><code>UnderlyingAssetStorage</code></a>.</p>\n</div></details></div></details>",0,"lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#647\">source</a><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_exchange_rate\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#647\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.max_exchange_rate\" class=\"fn\">max_exchange_rate</a>() -&gt; (<a class=\"type\" href=\"lending/type.Rate.html\" title=\"type lending::Rate\">Rate</a>, <a class=\"type\" href=\"lending/type.Rate.html\" title=\"type lending::Rate\">Rate</a>)</h4></section></summary><div class=\"docblock\"><p>An auto-generated getter for <a href=\"lending/pallet/type.MinMaxExchangeRate.html\" title=\"type lending::pallet::MinMaxExchangeRate\"><code>MinMaxExchangeRate</code></a>.</p>\n</div></details></div></details>",0,"lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#745-1150\">source</a><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_lending_pool\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#89\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.create_lending_pool\" class=\"fn\">create_lending_pool</a>(\n    origin: <a class=\"type\" href=\"lending/type.OriginFor.html\" title=\"type lending::OriginFor\">OriginFor</a>&lt;T&gt;,\n    id: <a class=\"type\" href=\"lending/type.LendingPoolId.html\" title=\"type lending::LendingPoolId\">LendingPoolId</a>,\n    asset: <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;,\n    balance: <a class=\"type\" href=\"lending/type.BalanceOf.html\" title=\"type lending::BalanceOf\">BalanceOf</a>&lt;T&gt;,\n) -&gt; <a class=\"type\" href=\"lending/type.DispatchResult.html\" title=\"type lending::DispatchResult\">DispatchResult</a></h4></section></summary><div class=\"docblock\"><p>The <code>create_lending_pool</code> function allows a user to Create a new reserve and then\nsupply it with some liquidity. Given an asset and its amount, it creates a\nnew lending pool, if it does not already exist, and adds the provided liquidity</p>\n<p>The user will receive LP tokens in return in ratio.</p>\n<h5 id=\"arguments\"><a class=\"doc-anchor\" href=\"#arguments\">§</a>Arguments</h5>\n<ul>\n<li><code>origin</code> - The origin caller of this function. This should be signed by the user that\ncreates the lending pool and add some liquidity.</li>\n<li><code>id</code>: AssetIdOf<T> - The pool id, provided by the user</li>\n<li><code>asset</code> - The identifier for the type of asset that the user wants to provide.</li>\n<li><code>balance</code> - The amount of <code>asset</code> that the user is providing.</li>\n</ul>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This function will return an error in the following scenarios:</p>\n<ul>\n<li>If the origin is not signed (i.e., the function was not called by a user).</li>\n<li>If the provided assets do not exist.</li>\n<li>If <code>amount</code> is 0 or less.</li>\n<li>If adding liquidity to the pool fails for any reason due to arithmetic overflow or\nunderflow</li>\n</ul>\n<h5 id=\"events\"><a class=\"doc-anchor\" href=\"#events\">§</a>Events</h5>\n<p>If the function succeeds, it triggers two events:</p>\n<ul>\n<li><code>LendingPoolAdded(who, asset_a)</code> if a new lending pool was created.</li>\n<li><code>DepositSupplied(who, asset_a, amount_a)</code> after the liquidity has been successfully\nadded.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.activate_lending_pool\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#89\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.activate_lending_pool\" class=\"fn\">activate_lending_pool</a>(\n    origin: <a class=\"type\" href=\"lending/type.OriginFor.html\" title=\"type lending::OriginFor\">OriginFor</a>&lt;T&gt;,\n    asset: <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;,\n) -&gt; <a class=\"type\" href=\"lending/type.DispatchResult.html\" title=\"type lending::DispatchResult\">DispatchResult</a></h4></section></summary><div class=\"docblock\"><p>The <code>activate_lending_pool</code> function allows a user to activate a lending pool that is\nnot empty. Once a liquidity pool gets activated supplies operations can be performed\notherwise only withdrawals.</p>\n<h5 id=\"arguments-1\"><a class=\"doc-anchor\" href=\"#arguments-1\">§</a>Arguments</h5>\n<ul>\n<li><code>origin</code> - The origin caller of this function. This should be signed by the user\nthat creates the lending pool and add some liquidity.</li>\n<li><code>asset</code> - The identifier for the type of asset that the user wants to provide.</li>\n</ul>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>This function will return an error in the following scenarios:</p>\n<ul>\n<li>If the origin is not signed (i.e., the function was not called by a user).</li>\n<li>If the provided assets do not exist.</li>\n<li>If the pool does not exist.</li>\n<li>If the pool is already activated.</li>\n<li>If the pool is empty.</li>\n</ul>\n<h5 id=\"events-1\"><a class=\"doc-anchor\" href=\"#events-1\">§</a>Events</h5>\n<p>If the function succeeds, it triggers an event:</p>\n<ul>\n<li><code>LendingPoolActivated(who, asset_a)</code> if the lending pool was activated.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.supply\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#89\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.supply\" class=\"fn\">supply</a>(\n    origin: <a class=\"type\" href=\"lending/type.OriginFor.html\" title=\"type lending::OriginFor\">OriginFor</a>&lt;T&gt;,\n    asset: <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;,\n    balance: <a class=\"type\" href=\"lending/type.BalanceOf.html\" title=\"type lending::BalanceOf\">BalanceOf</a>&lt;T&gt;,\n) -&gt; <a class=\"type\" href=\"lending/type.DispatchResult.html\" title=\"type lending::DispatchResult\">DispatchResult</a></h4></section></summary><div class=\"docblock\"><p>The <code>supply</code> function allows a user to supply liquidity to a lending pool.</p>\n<h5 id=\"arguments-2\"><a class=\"doc-anchor\" href=\"#arguments-2\">§</a>Arguments</h5>\n<ul>\n<li><code>origin</code> - The origin caller of this function. This should be signed by the user\nthat creates the lending pool and add some liquidity.</li>\n<li><code>asset</code> - The identifier for the type of asset that the user wants to provide.</li>\n<li><code>balance</code> - The amount of <code>asset</code> that the user is providing.</li>\n</ul>\n<h5 id=\"errors-2\"><a class=\"doc-anchor\" href=\"#errors-2\">§</a>Errors</h5>\n<p>This function will return an error in the following scenarios:</p>\n<ul>\n<li>If the origin is not signed (i.e., the function was not called by a user).</li>\n<li>If the provided assets do not exist.</li>\n<li>If the pool does not exist.</li>\n<li>If the pool is not active.</li>\n<li>If the user has not enough liquidity to supply.</li>\n<li>If the balance amount to supply is not valid.</li>\n<li>If adding liquidity to the pool fails for any reason due to arithmetic overflow or\nunderflow</li>\n</ul>\n<h5 id=\"events-2\"><a class=\"doc-anchor\" href=\"#events-2\">§</a>Events</h5>\n<p>If the function succeeds, it triggers an event:</p>\n<ul>\n<li><code>DepositSupplied(who, asset, balance)</code> if the lending pool has been supplied.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.withdraw\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#89\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.withdraw\" class=\"fn\">withdraw</a>(\n    origin: <a class=\"type\" href=\"lending/type.OriginFor.html\" title=\"type lending::OriginFor\">OriginFor</a>&lt;T&gt;,\n    asset: <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;,\n    balance: <a class=\"type\" href=\"lending/type.BalanceOf.html\" title=\"type lending::BalanceOf\">BalanceOf</a>&lt;T&gt;,\n) -&gt; <a class=\"type\" href=\"lending/type.DispatchResult.html\" title=\"type lending::DispatchResult\">DispatchResult</a></h4></section></summary><div class=\"docblock\"><p>The <code>withdraw</code> function allows a user to withdraw liquidity from a lending pool.</p>\n<h5 id=\"arguments-3\"><a class=\"doc-anchor\" href=\"#arguments-3\">§</a>Arguments</h5>\n<ul>\n<li><code>origin</code> - The origin caller of this function. This should be signed by the user\nthat creates the lending pool and add some liquidity.</li>\n<li><code>asset</code> - The identifier for the type of asset that the user wants to provide.</li>\n<li><code>balance</code> - The amount of <code>asset</code> that the user is providing.</li>\n</ul>\n<h5 id=\"errors-3\"><a class=\"doc-anchor\" href=\"#errors-3\">§</a>Errors</h5>\n<p>This function will return an error in the following scenarios:</p>\n<ul>\n<li>If the origin is not signed (i.e., the function was not called by a user).</li>\n<li>If the provided assets do not exist.</li>\n<li>If the pool does not exist.</li>\n<li>If the pool is not active.</li>\n<li>If the user has not enough liquidity to supply.</li>\n<li>If the balance amount to supply is not valid.</li>\n<li>If adding liquidity to the pool fails for any reason due to arithmetic overflow or\nunderflow</li>\n</ul>\n<h5 id=\"events-3\"><a class=\"doc-anchor\" href=\"#events-3\">§</a>Events</h5>\n<p>If the function succeeds, it triggers an event:</p>\n<ul>\n<li><code>DepositWithdrawn(who, balance)</code> if the lending pool was activated.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#89\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.borrow\" class=\"fn\">borrow</a>(\n    origin: <a class=\"type\" href=\"lending/type.OriginFor.html\" title=\"type lending::OriginFor\">OriginFor</a>&lt;T&gt;,\n    asset: <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;,\n    balance: <a class=\"type\" href=\"lending/type.AssetBalanceOf.html\" title=\"type lending::AssetBalanceOf\">AssetBalanceOf</a>&lt;T&gt;,\n    collateral_asset: <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;,\n    collateral_balance: <a class=\"type\" href=\"lending/type.AssetBalanceOf.html\" title=\"type lending::AssetBalanceOf\">AssetBalanceOf</a>&lt;T&gt;,\n) -&gt; <a class=\"type\" href=\"lending/type.DispatchResult.html\" title=\"type lending::DispatchResult\">DispatchResult</a></h4></section></summary><div class=\"docblock\"><p>The <code>borrow</code> function allows a user to borrow liquidity from a lending pool.</p>\n<h5 id=\"arguments-4\"><a class=\"doc-anchor\" href=\"#arguments-4\">§</a>Arguments</h5>\n<ul>\n<li><code>origin</code> - The origin caller of this function. This should be signed by the user\nthat creates the lending pool and add some liquidity.</li>\n<li><code>asset</code> - The identifier for the type of asset that the user wants to provide.</li>\n<li><code>balance</code> - The amount of <code>asset</code> that the user is providing.</li>\n</ul>\n<h5 id=\"errors-4\"><a class=\"doc-anchor\" href=\"#errors-4\">§</a>Errors</h5>\n<p>This function will return an error in the following scenarios:</p>\n<ul>\n<li>If the origin is not signed (i.e., the function was not called by a user).</li>\n<li>If the provided assets do not exist.</li>\n<li>If the pool does not exist.</li>\n<li>If the pool is not active.</li>\n<li>If the user has not enough liquidity to supply.</li>\n<li>If the balance amount to supply is not valid.</li>\n<li>If adding liquidity to the pool fails for any reason due to arithmetic overflow or\nunderflow</li>\n</ul>\n<h5 id=\"events-4\"><a class=\"doc-anchor\" href=\"#events-4\">§</a>Events</h5>\n<p>If the function succeeds, it triggers an event:</p>\n<ul>\n<li><code>DepositBorrowed(who, balance)</code> if the lending pool was activated.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.repay\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#89\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.repay\" class=\"fn\">repay</a>(\n    origin: <a class=\"type\" href=\"lending/type.OriginFor.html\" title=\"type lending::OriginFor\">OriginFor</a>&lt;T&gt;,\n    asset: <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;,\n    balance: <a class=\"type\" href=\"lending/type.BalanceOf.html\" title=\"type lending::BalanceOf\">BalanceOf</a>&lt;T&gt;,\n    collateral_asset: <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;,\n) -&gt; <a class=\"type\" href=\"lending/type.DispatchResult.html\" title=\"type lending::DispatchResult\">DispatchResult</a></h4></section></summary><div class=\"docblock\"><p>The <code>repay</code> function allows a user to repay liquidity from a lending pool.</p>\n<h5 id=\"arguments-5\"><a class=\"doc-anchor\" href=\"#arguments-5\">§</a>Arguments</h5>\n<ul>\n<li><code>origin</code> - The origin caller of this function. This should be signed by the user\nthat creates the lending pool and add some liquidity.</li>\n<li><code>asset</code> - The identifier for the type of asset that the user wants to provide.</li>\n<li><code>balance</code> - The amount of <code>asset</code> that the user is providing.</li>\n</ul>\n<h5 id=\"errors-5\"><a class=\"doc-anchor\" href=\"#errors-5\">§</a>Errors</h5>\n<p>This function will return an error in the following scenarios:</p>\n<ul>\n<li>If the origin is not signed (i.e., the function was not called by a user).</li>\n<li>If the provided assets do not exist.</li>\n<li>If the pool does not exist.</li>\n<li>If the pool is not active.</li>\n<li>If the user has not enough liquidity to supply.</li>\n<li>If the balance amount to supply is not valid.</li>\n<li>If adding liquidity to the pool fails for any reason due to arithmetic overflow or\nunderflow</li>\n</ul>\n<h5 id=\"events-5\"><a class=\"doc-anchor\" href=\"#events-5\">§</a>Events</h5>\n<p>If the function succeeds, it triggers an event:</p>\n<ul>\n<li><code>DepositRepaid(who, balance)</code> if the lending pool was activated.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_rewards\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#89\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.claim_rewards\" class=\"fn\">claim_rewards</a>(\n    origin: <a class=\"type\" href=\"lending/type.OriginFor.html\" title=\"type lending::OriginFor\">OriginFor</a>&lt;T&gt;,\n    balance: <a class=\"type\" href=\"lending/type.BalanceOf.html\" title=\"type lending::BalanceOf\">BalanceOf</a>&lt;T&gt;,\n) -&gt; <a class=\"type\" href=\"lending/type.DispatchResult.html\" title=\"type lending::DispatchResult\">DispatchResult</a></h4></section></summary><div class=\"docblock\"><p>The <code>claim_rewards</code> function allows a user to claim their rewards.</p>\n<h5 id=\"arguments-6\"><a class=\"doc-anchor\" href=\"#arguments-6\">§</a>Arguments</h5>\n<ul>\n<li><code>origin</code> - The origin caller of this function. This should be signed by the user\nclaiming rewards.</li>\n<li><code>balance</code> - The amount of rewards to be claimed.</li>\n</ul>\n<h5 id=\"errors-6\"><a class=\"doc-anchor\" href=\"#errors-6\">§</a>Errors</h5>\n<p>This function will return an error in the following scenarios:</p>\n<ul>\n<li>If the origin is not signed (i.e., the function was not called by a user).</li>\n</ul>\n<h5 id=\"events-6\"><a class=\"doc-anchor\" href=\"#events-6\">§</a>Events</h5>\n<p>If the function succeeds, it triggers an event:</p>\n<ul>\n<li><code>RewardsClaimed { who, balance }</code>: Notifies the system that rewards have been claimed\nby a user.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deactivate_lending_pool\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#89\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.deactivate_lending_pool\" class=\"fn\">deactivate_lending_pool</a>(\n    origin: <a class=\"type\" href=\"lending/type.OriginFor.html\" title=\"type lending::OriginFor\">OriginFor</a>&lt;T&gt;,\n    asset: <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;,\n) -&gt; <a class=\"type\" href=\"lending/type.DispatchResult.html\" title=\"type lending::DispatchResult\">DispatchResult</a></h4></section></summary><div class=\"docblock\"><p>The <code>deactivate_lending_pool</code> function allows a user to deactivate a lending pool that\nis not empty. Once a liquidity pool gets deactivated supplies operations can not be\nperformed otherwise only withdrawals.</p>\n<h5 id=\"arguments-7\"><a class=\"doc-anchor\" href=\"#arguments-7\">§</a>Arguments</h5>\n<ul>\n<li><code>origin</code> - The origin caller of this function. This should be signed by the user\nthat creates the lending pool and add some liquidity.</li>\n<li><code>asset</code> - The identifier for the type of asset that the user wants to provide.</li>\n</ul>\n<h5 id=\"errors-7\"><a class=\"doc-anchor\" href=\"#errors-7\">§</a>Errors</h5>\n<p>This function will return an error in the following scenarios:</p>\n<ul>\n<li>If the origin is not signed (i.e., the function was not called by a user).</li>\n<li>If the provided assets do not exist.</li>\n<li>If the pool does not exist.</li>\n<li>If the pool is already deactivated.</li>\n<li>If the pool is empty.</li>\n</ul>\n<h5 id=\"events-7\"><a class=\"doc-anchor\" href=\"#events-7\">§</a>Events</h5>\n<p>If the function succeeds, it triggers an event:</p>\n<ul>\n<li><code>LendingPoolDeactivated(who, asset_a)</code> if the lending pool was deactivated.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_pool_rate_model\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#89\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.update_pool_rate_model\" class=\"fn\">update_pool_rate_model</a>(\n    origin: <a class=\"type\" href=\"lending/type.OriginFor.html\" title=\"type lending::OriginFor\">OriginFor</a>&lt;T&gt;,\n    asset: <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;,\n) -&gt; <a class=\"type\" href=\"lending/type.DispatchResult.html\" title=\"type lending::DispatchResult\">DispatchResult</a></h4></section></summary><div class=\"docblock\"><p>The <code>update_pool_rate_model</code> function allows a user to update the rate model of a\nlending pool.</p>\n<h5 id=\"arguments-8\"><a class=\"doc-anchor\" href=\"#arguments-8\">§</a>Arguments</h5>\n<ul>\n<li><code>origin</code> - The origin caller of this function. This should be signed by the user\nupdating the rate model.</li>\n<li><code>asset</code> - The identifier for the type of asset associated with the lending pool.</li>\n</ul>\n<h5 id=\"errors-8\"><a class=\"doc-anchor\" href=\"#errors-8\">§</a>Errors</h5>\n<p>This function will return an error in the following scenarios:</p>\n<ul>\n<li>If the origin is not signed (i.e., the function was not called by a user).</li>\n</ul>\n<h5 id=\"events-8\"><a class=\"doc-anchor\" href=\"#events-8\">§</a>Events</h5>\n<p>If the function succeeds, it triggers an event:</p>\n<ul>\n<li><code>LendingPoolRateModelUpdated { who, asset }</code>: Notifies the system that the rate model\nof a lending pool was updated by a user.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_pool_kink\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#89\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.update_pool_kink\" class=\"fn\">update_pool_kink</a>(\n    origin: <a class=\"type\" href=\"lending/type.OriginFor.html\" title=\"type lending::OriginFor\">OriginFor</a>&lt;T&gt;,\n    asset: <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;,\n) -&gt; <a class=\"type\" href=\"lending/type.DispatchResult.html\" title=\"type lending::DispatchResult\">DispatchResult</a></h4></section></summary><div class=\"docblock\"><p>The <code>update_pool_kink</code> function allows a user to update the kink of a lending pool.</p>\n<h5 id=\"arguments-9\"><a class=\"doc-anchor\" href=\"#arguments-9\">§</a>Arguments</h5>\n<ul>\n<li><code>origin</code> - The origin caller of this function. This should be signed by the user\nupdating the kink.</li>\n<li><code>asset</code> - The identifier for the type of asset associated with the lending pool.</li>\n</ul>\n<h5 id=\"errors-9\"><a class=\"doc-anchor\" href=\"#errors-9\">§</a>Errors</h5>\n<p>This function will return an error in the following scenarios:</p>\n<ul>\n<li>If the origin is not signed (i.e., the function was not called by a user).</li>\n</ul>\n<h5 id=\"events-9\"><a class=\"doc-anchor\" href=\"#events-9\">§</a>Events</h5>\n<p>If the function succeeds, it triggers an event:</p>\n<ul>\n<li><code>LendingPoolKinkUpdated { who, asset }</code>: Notifies the system that the kink of a\nlending pool was updated by a user.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_asset_price\" class=\"method\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#89\">source</a><h4 class=\"code-header\">pub fn <a href=\"lending/pallet/struct.Pallet.html#tymethod.set_asset_price\" class=\"fn\">set_asset_price</a>(\n    origin: <a class=\"type\" href=\"lending/type.OriginFor.html\" title=\"type lending::OriginFor\">OriginFor</a>&lt;T&gt;,\n    asset_1: <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;,\n    asset_2: <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;,\n    price: <a class=\"struct\" href=\"lending/struct.FixedU128.html\" title=\"struct lending::FixedU128\">FixedU128</a>,\n) -&gt; <a class=\"type\" href=\"lending/type.DispatchResult.html\" title=\"type lending::DispatchResult\">DispatchResult</a></h4></section></summary><div class=\"docblock\"><p>Sets the price of one asset in terms of another asset.</p>\n<p>The <code>set_asset_price</code> extrinsic allows a user to specify the relative price of one asset\n(<code>asset_1</code>) in terms of another asset (<code>asset_2</code>).</p>\n<h5 id=\"parameters\"><a class=\"doc-anchor\" href=\"#parameters\">§</a>Parameters</h5>\n<ul>\n<li><code>origin</code>: The transaction origin. This must be a signed extrinsic.</li>\n<li><code>asset_1</code>: The identifier for the first asset. This is the asset whose price is being\nset.</li>\n<li><code>asset_2</code>: The identifier for the second asset. This is the asset relative to which\nthe price is measured.</li>\n<li><code>price</code>: The price of <code>asset_1</code> in terms of <code>asset_2</code>. This must be a non-zero value\nto avoid errors.</li>\n</ul>\n<h5 id=\"events-10\"><a class=\"doc-anchor\" href=\"#events-10\">§</a>Events</h5>\n<ul>\n<li><code>AssetPriceAdded { asset_1, asset_2, price }</code>: This event is emitted after the price\nis successfully set. It contains the asset identifiers and the new price.</li>\n</ul>\n<h5 id=\"errors-10\"><a class=\"doc-anchor\" href=\"#errors-10\">§</a>Errors</h5>\n<ul>\n<li><code>InvalidAssetPrice</code>: This error is thrown if the <code>price</code> parameter is zero.</li>\n</ul>\n<h5 id=\"note-this-should-be-moved-to-a-new-pallet-prices\"><a class=\"doc-anchor\" href=\"#note-this-should-be-moved-to-a-new-pallet-prices\">§</a>Note this should be moved to a new pallet <code>prices</code></h5></div></details></div></details>",0,"lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; <a class=\"trait\" href=\"lending/trait.PalletInfoAccess.html\" title=\"trait lending::PalletInfoAccess\">PalletInfoAccess</a> for <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lending/trait.PalletInfoAccess.html#tymethod.index\" class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lending/trait.PalletInfoAccess.html#tymethod.name\" class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lending/trait.PalletInfoAccess.html#tymethod.module_name\" class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lending/trait.PalletInfoAccess.html#tymethod.crate_version\" class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; PalletsInfoAccess for <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#89\">source</a><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#89\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; <a class=\"trait\" href=\"lending/trait.StorageInfoTrait.html\" title=\"trait lending::StorageInfoTrait\">StorageInfoTrait</a> for <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#93\">source</a><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lending/trait.StorageInfoTrait.html#tymethod.storage_info\" class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","lending::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#89\">source</a><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; WhitelistedStorageKeys for <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#89\">source</a><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","lending::pallet::Module"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lending/lib.rs.html#94\">source</a><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"lending/pallet/struct.Pallet.html\" title=\"struct lending::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section>","Eq","lending::pallet::Module"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()