(function() {var implementors = {
"lending":[["impl <a class=\"trait\" href=\"lending/trait.MaxEncodedLen.html\" title=\"trait lending::MaxEncodedLen\">MaxEncodedLen</a> for <a class=\"struct\" href=\"lending/pallet/struct.InterestRateModel.html\" title=\"struct lending::pallet::InterestRateModel\">InterestRateModel</a>"],["impl <a class=\"trait\" href=\"lending/trait.MaxEncodedLen.html\" title=\"trait lending::MaxEncodedLen\">MaxEncodedLen</a> for <a class=\"struct\" href=\"lending/pallet/struct.SupplyIndex.html\" title=\"struct lending::pallet::SupplyIndex\">SupplyIndex</a>"],["impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; <a class=\"trait\" href=\"lending/trait.MaxEncodedLen.html\" title=\"trait lending::MaxEncodedLen\">MaxEncodedLen</a> for <a class=\"struct\" href=\"lending/pallet/struct.AssetPool.html\" title=\"struct lending::pallet::AssetPool\">AssetPool</a>&lt;T&gt;<div class=\"where\">where\n    <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;: <a class=\"trait\" href=\"lending/trait.MaxEncodedLen.html\" title=\"trait lending::MaxEncodedLen\">MaxEncodedLen</a>,</div>"],["impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; <a class=\"trait\" href=\"lending/trait.MaxEncodedLen.html\" title=\"trait lending::MaxEncodedLen\">MaxEncodedLen</a> for <a class=\"struct\" href=\"lending/pallet/struct.LendingPool.html\" title=\"struct lending::pallet::LendingPool\">LendingPool</a>&lt;T&gt;<div class=\"where\">where\n    <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;: <a class=\"trait\" href=\"lending/trait.MaxEncodedLen.html\" title=\"trait lending::MaxEncodedLen\">MaxEncodedLen</a>,\n    <a class=\"type\" href=\"lending/type.AssetBalanceOf.html\" title=\"type lending::AssetBalanceOf\">AssetBalanceOf</a>&lt;T&gt;: <a class=\"trait\" href=\"lending/trait.MaxEncodedLen.html\" title=\"trait lending::MaxEncodedLen\">MaxEncodedLen</a>,</div>"],["impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; <a class=\"trait\" href=\"lending/trait.MaxEncodedLen.html\" title=\"trait lending::MaxEncodedLen\">MaxEncodedLen</a> for <a class=\"struct\" href=\"lending/pallet/struct.UnderlyingAsset.html\" title=\"struct lending::pallet::UnderlyingAsset\">UnderlyingAsset</a>&lt;T&gt;<div class=\"where\">where\n    <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;: <a class=\"trait\" href=\"lending/trait.MaxEncodedLen.html\" title=\"trait lending::MaxEncodedLen\">MaxEncodedLen</a>,\n    <a class=\"type\" href=\"lending/type.AssetBalanceOf.html\" title=\"type lending::AssetBalanceOf\">AssetBalanceOf</a>&lt;T&gt;: <a class=\"trait\" href=\"lending/trait.MaxEncodedLen.html\" title=\"trait lending::MaxEncodedLen\">MaxEncodedLen</a>,</div>"],["impl&lt;T: <a class=\"trait\" href=\"lending/pallet/trait.Config.html\" title=\"trait lending::pallet::Config\">Config</a>&gt; <a class=\"trait\" href=\"lending/trait.MaxEncodedLen.html\" title=\"trait lending::MaxEncodedLen\">MaxEncodedLen</a> for <a class=\"struct\" href=\"lending/struct.UserBorrow.html\" title=\"struct lending::UserBorrow\">UserBorrow</a>&lt;T&gt;<div class=\"where\">where\n    <a class=\"type\" href=\"lending/type.AssetIdOf.html\" title=\"type lending::AssetIdOf\">AssetIdOf</a>&lt;T&gt;: <a class=\"trait\" href=\"lending/trait.MaxEncodedLen.html\" title=\"trait lending::MaxEncodedLen\">MaxEncodedLen</a>,\n    <a class=\"type\" href=\"lending/type.AssetBalanceOf.html\" title=\"type lending::AssetBalanceOf\">AssetBalanceOf</a>&lt;T&gt;: <a class=\"trait\" href=\"lending/trait.MaxEncodedLen.html\" title=\"trait lending::MaxEncodedLen\">MaxEncodedLen</a>,</div>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()